events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        listen 443 ssl http2;
        server_name leaky.krondor.org;

        include /config/nginx/ssl.conf;

        location /auth {
            internal;
            proxy_pass http://thumbs-up:3000/api/v0/identity;
    
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;

            # Forward the necessary headers to the auth service
            proxy_set_header Authorization $http_authorization;
        }

        # IPFS API routes
        location ^~ /api/v0/ipfs/ {
            # If this is a POST request, we need to through to the auth service
            if ($request_method = POST) {
                proxy_pass /auth;
            }


            proxy_pass http://ipfs:5001/api/v0/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # All other routes go to the main server
        location / {
            proxy_pass http://leaky:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}