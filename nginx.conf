events {
    worker_connections 1024;
}

http {
    # Add error logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Add timeout settings
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;

    server {
        listen 80;

        # Test endpoint to verify nginx is working
        location = /nginx-health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'nginx is responding\n';
        }

        # IPFS API routes - use Docker service name
        location ^~ /api/v0/ipfs/ {
            proxy_pass http://ipfs:5001/api/v0/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Local development routes - use host.docker.internal
        location ^~ /api/ {
            proxy_pass http://host.docker.internal:3000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ^~ /_status/ {
            proxy_pass http://host.docker.internal:3000/_status/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # All other routes go to the main server
        location / {
            proxy_pass http://host.docker.internal:3000/content/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
